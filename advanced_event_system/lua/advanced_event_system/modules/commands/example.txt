-- Creating a module can be rather confusing but
-- once you get the hang of it its incredibly easy

-- To start creating a command we need to create the category
-- to do so copy the code below:

local MODULE = table.Copy(AEvent.BaseModule) -- Leave this line
MODULE.CategoryID = "Command:Bring" -- THIS NEEDS TO BE A UNIQUE ID of the category
MODULE.Name = "Bring" -- Category name that will get displayed

-- Next we want to create a command
-- There are 3 types of commands:
-- no input commands (ones where you just click it and no other input is needed)
-- sub menu option (ones where a submenu is opened so users can click predefined options)
-- string input (ones where a user inputs text into a box)
-- if you want a number input just use string input and tonumber() the result!

-- Now i will show you how to create each command type:

-- No Input Command:
MODULE:AddCommand({
    ID = "killall",
    Name = "Kill everyone on the map",
    ExtraSelection = function()
        -- all you have to do is make sure you return false
        return false
    end,
    RunCommand = function(data)
        -- data will be just {} for this command
        for _, ply in ipairs(player.GetAll()) do
            ply:Kill()
        end
    end,
})

-- Now this one is a little bit tricker as it requires us to supply the correct information
-- Sub Menu:
MODULE:AddCommand({
    ID = "killTeam",
    Name = "Kill people as team '...'", -- '...' will be replaced as the selected option
    ExtraSelection = function()
        local tbl = {}
        for _, job in ipairs(team.GetAllTeams()) do
            table.Add(tbl, {{
                Text = job.Name, -- Text is the text that gets displayed as the option
                Data = {Job = job.Name, Example = "Hello World!"}, -- Data is all the data you get passed through RunCommand
                -- *note* Selection gets inputed into the data when the user click an option
                -- so its not really neccessary to store what u clicked in the data but i have done it anyways
                -- to give you an example
            }})
        end
        return tbl
    end,
    RunCommand = function(data)
        -- So in this example the data would look like this if you selected citizen
        --[[
            {
                Job = "Citizen",
                Selection = "Citizen", -- remember the computer inputs this automatically to show what we clicked
                playerSupplied = ply, -- hooks such as player death can supply a player so we can target them
                Example = "Hello World!",
            }
        ]]--
        print(data.Example)
        for _, ply in ipairs(player.GetAll()) do
            if team.GetName(ply:Team()) == data.Job then
                ply:Kill()
            end
        end
    end,
})

-- String Input:
MODULE:AddCommand({
    ID = "killTeaminput",
    Name = "Kill people with '...' in thier name", -- '...' will be replaced as the inputted option
    ExtraSelection = function()
        -- "String Input" to show we want a string input
        -- the second part is what the title of the box is
        return {"String Input", "input a phrase"}
    end,
    RunCommand = function(data)
        -- The Data of this one will look like so
        --[[
            {
                Selection = "aevent",
            }
        ]]--
        -- Because remember the computer inputs Selection as the selected item!
        
        -- now for you that dont understand what this code is doing
        -- all its doing is checking if the user has the phrase in thier name
        for _, ply in ipairs(player.GetAll()) do
            local start, startend = string.find(string.lower(ply:Nick()), string.lower(data.Selection))
            if start then
                ply:Kill()
            end
        end
    end,
})

MODULE:AddCommand({
    ID = "killPerson",
    Name = "Kill the person who caused the event", -- '...' will be replaced as the selected option
    ExtraSelection = function()
        return false
    end,
    RunCommand = function(data)
        if IsValid(data.playerSupplied) then
            data.playerSupplied:Kill()
        end
    end,
})

-- then add this at the bottom to show we want to
-- show the commands
AEvent:CreateCommand(MODULE)

-- Now we are done!
-- hope you understood if not
-- make a gmodstore ticket